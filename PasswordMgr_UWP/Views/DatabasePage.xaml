<Page
    x:Class="PasswordMgr_UWP.Views.DatabasePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:m="using:PasswordMgr_UWP.Models"
    xmlns:cm="using:PasswordMgr_UWP.Core.Models"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    Style="{StaticResource PageStyle}"
    x:DefaultBindMode="OneWay"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="DatabaseTemplate" x:DataType="cm:EncryptedDatabase">
            <TreeViewItem IsExpanded="{x:Bind IsDecrypted}" ItemsSource="{x:Bind Passwords}">
                <StackPanel Orientation="Horizontal" Spacing="10">
                    <SymbolIcon Symbol="ProtectedDocument"/>
                    <TextBlock Text="{x:Bind Name}"/>
                </StackPanel>
            </TreeViewItem>
        </DataTemplate>

        <DataTemplate x:Key="PasswordTemplate" x:DataType="cm:EncryptedPassword">
            <TreeViewItem>
                <StackPanel Orientation="Horizontal" Spacing="10">
                    <SymbolIcon Symbol="Permissions"/>
                    <TextBlock Text="{x:Bind Name}"/>
                </StackPanel>
            </TreeViewItem>
        </DataTemplate>

        <m:DatabaseItemTemplateSelector x:Key="DatabaseItemTemplateSelector"
                                        FolderTemplate="{StaticResource DatabaseTemplate}"
                                        FileTemplate="{StaticResource PasswordTemplate}"/>

        <m:TreeViewItemInvokedEventArgsToInvokedItemConverter x:Key="TreeViewItemInvokedEventArgsToInvokedItemConverter"/>
        <m:BoolToPasswordRevealModeConverter x:Key="BoolToPasswordRevealModeConverter"/>
        <m:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <m:CheckForValueConverter x:Key="CheckForValueConverter"/>
    </Page.Resources>

    <Grid x:Name="ContentArea">

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="2.5*"/>
        </Grid.ColumnDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="managerPageVisualGroup">
                <VisualState x:Name="normalWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="810"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="dataSpace.(Grid.Row)" Value="0"/>
                        <Setter Target="dataSpace.(Grid.Column)" Value="1"/>
                        
                        <Setter Target="treeSpace.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="dataSpace.(Grid.ColumnSpan)" Value="1"/>

                        <Setter Target="treeSpace.(Grid.RowSpan)" Value="2"/>
                        <Setter Target="dataSpace.(Grid.RowSpan)" Value="2"/>

                        <Setter Target="dataSpace.VerticalAlignment" Value="Top"/>
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState x:Name="smallWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="dataSpace.(Grid.Row)" Value="1"/>
                        <Setter Target="dataSpace.(Grid.Column)" Value="0"/>

                        <Setter Target="treeSpace.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="dataSpace.(Grid.ColumnSpan)" Value="2"/>

                        <Setter Target="treeSpace.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="dataSpace.(Grid.RowSpan)" Value="1"/>

                        <Setter Target="treeSpace.Margin" Value="2"/>
                        <Setter Target="dataSpace.Margin" Value="5"/>

                        <Setter Target="dataSpace.VerticalAlignment" Value="Bottom"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="treeSpace"
              Margin="{StaticResource MediumRightMargin}"
              Background="{ThemeResource SystemControlAcrylicWindowBrush}"
              CornerRadius="5">

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <TreeView ItemsSource="{x:Bind ViewModel.Databases}"
                          ItemTemplateSelector="{StaticResource DatabaseItemTemplateSelector}"
                          CanDrag="False"
                          CanDragItems="False"
                          AllowDrop="False">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemInvoked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetSelectedCommand}" InputConverter="{StaticResource TreeViewItemInvokedEventArgsToInvokedItemConverter}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </TreeView>
            </ScrollViewer>

            <Frame Grid.Row="1" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            Spacing="10"
                            Margin="0,10">
                    
                    <Button Style="{ThemeResource AccentButtonStyle}"
                            Command="{x:Bind ViewModel.NewDatabaseCommand}"
                            x:Uid="/UIResources/newDatabaseBtn">
                        <SymbolIcon Symbol="Add"/>
                    </Button>

                    <Button Style="{ThemeResource AccentButtonStyle}"
                            Command="{x:Bind ViewModel.NewPasswordCommand}"
                            IsEnabled="{x:Bind ViewModel.Selected.IsDecrypted, FallbackValue=false}"
                            x:Uid="/UIResources/newPasswordBtn">
                        <SymbolIcon Symbol="Permissions"/>
                    </Button>

                    <Button Command="{x:Bind ViewModel.DeleteCommand}"
                            IsEnabled="{x:Bind ViewModel.Selected, Converter={StaticResource CheckForValueConverter}}"
                            x:Uid="/UIResources/deleteBtn">
                        <SymbolIcon Symbol="Delete"/>
                    </Button>

                    <Button Style="{ThemeResource AccentButtonStyle}"
                            Command="{x:Bind ViewModel.DecryptDatabaseCommand}"
                            IsEnabled="{x:Bind ViewModel.Selected.IsDecrypted, Converter={StaticResource InverseBoolConverter}, FallbackValue=false}"
                            x:Uid="/UIResources/decryptBtn">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE785;"/>
                    </Button>
                </StackPanel>
            </Frame>
        </Grid>

        <ScrollViewer x:Name="dataSpace"
                      VerticalScrollBarVisibility="Auto"
                      Grid.Column="1"
                      Margin="{StaticResource MediumRightMargin}">
            <StackPanel Spacing="10">
                <TextBlock x:Uid="/UIResources/savedPasswords" FontSize="30"/>

                <TextBlock Text="Details"/>
                <Frame CornerRadius="5"
                       BorderThickness="8"
                       BorderBrush="{ThemeResource AppBarItemPointerOverBackgroundThemeBrush}"
                       Background="{ThemeResource SystemControlAcrylicElementBrush}">

                    <StackPanel Spacing="10"
                            Margin="5"
                            CornerRadius="5"
                            Background="{ThemeResource SystemControlAcrylicElementBrush}">

                        <TextBox x:Uid="/UIResources/name"
                                 Text="{x:Bind ViewModel.Name}"
                                 AllowFocusOnInteraction="{x:Bind (x:Boolean)editBtn.IsChecked}"/>

                        <TextBox x:Uid="/UIResources/info"
                                 Text="{x:Bind ViewModel.Info}"
                                 AllowFocusOnInteraction="{x:Bind (x:Boolean)editBtn.IsChecked}"/>

                        <PasswordBox Name="password" x:Uid="/UIResources/password"
                                     Password="{x:Bind ViewModel.PlaintextPassword}"
                                     PasswordRevealMode="{x:Bind showBtn.IsChecked, Converter={StaticResource BoolToPasswordRevealModeConverter}}"
                                     AllowFocusOnInteraction="{x:Bind (x:Boolean)editBtn.IsChecked}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10"
                                        Margin="2">
                                <Button Style="{ThemeResource AccentButtonStyle}" Visibility="Collapsed">
                                    <SymbolIcon Symbol="Save"/>
                                </Button>

                                <Button Command="{x:Bind ViewModel.CopyCommand}"
                                CommandParameter="{x:Bind password.Password}"
                                x:Uid="/UIResources/copySymbolBtn">
                                    <SymbolIcon Symbol="Copy"/>
                                </Button>

                                <ToggleButton Name="showBtn"
                                      x:Uid="/UIResources/showBtn">
                                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE7B3;"/>
                                </ToggleButton>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10"
                                        HorizontalAlignment="Right"
                                        Grid.Column="1">

                                <Button Visibility="{x:Bind editBtn.IsChecked}"
                                        Style="{ThemeResource AccentButtonStyle}">
                                    <SymbolIcon Symbol="Save"/>
                                </Button>

                                <!--Will be added soon.-->
                                <ToggleButton x:Name="editBtn" Visibility="Collapsed"
                                              IsEnabled="{x:Bind ViewModel.Selected.IsDecrypted, FallbackValue=false}"
                                              IsChecked="{x:Bind ViewModel.EditChecked, FallbackValue=false}">
                                    <SymbolIcon Symbol="Edit"/>
                                </ToggleButton>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Frame>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
